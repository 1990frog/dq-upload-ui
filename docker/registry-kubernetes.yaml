### Application Pod
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: data-quality-upload-ui
  namespace: data-middle-platform
  labels:
    app: data-quality-upload-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: data-quality-upload-ui
  template:
    metadata:
      labels:
        app: data-quality-upload-ui
    spec:
      containers:
        - name: data-quality-upload-ui
          image: "dockerhub.clinbrain.com/data-quality-upload-ui:2021122902"
          imagePullPolicy: Always
          volumeMounts:
            - name: config-volume
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: config-volume
              mountPath: /etc/nginx/conf.d/data-quality-upload-ui.conf
              subPath: data-quality-upload-ui.conf
      nodeSelector:
        flag-data-quality-ui: enabled
      volumes:
        - name: config-volume
          configMap:
            name: data-quality-upload-ui

### Application Service
---
apiVersion: v1
kind: Service
metadata:
  name: data-quality-upload-ui
  namespace: data-middle-platform
spec:
  type: NodePort
  ports:
    - port: 14060
      nodePort: 14060
      targetPort: 8080
  selector:
    app: data-quality-upload-ui

### Application Config MAP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: data-quality-upload-ui
  namespace: data-middle-platform
data:
  nginx.conf: |
    user  nginx;
    worker_processes  auto;

    error_log  /var/log/nginx/data-quality-upload-ui.log notice;
    pid        /var/run/nginx.pid;


    events {
      use epoll;
      worker_connections 1024;
      multi_accept on;
    }


    http {
      include       /etc/nginx/mime.types;
      default_type  application/octet-stream;

      log_format  main  '$remote_addr $remote_user [$time_local] "$request" '
        '$status $body_bytes_sent "$http_referer" '
        '$http_user_agent $http_x_forwarded_for $request_time $upstream_response_time $upstream_addr $upstream_status';


      access_log  /var/log/nginx/data-quality-upload-ui-access.log  main;
      sendfile        on;
      tcp_nopush     on;

      proxy_buffering on;
      proxy_buffer_size 4k;
      proxy_buffers 16 64k;
      proxy_busy_buffers_size 128k;
      proxy_temp_file_write_size 128k;
      proxy_set_header Host $http_host;
      proxy_set_header X-REAL-IP $remote_addr;
      proxy_set_header X-Real-Port $remote_port;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      keepalive_timeout 60;
      tcp_nodelay on;
      client_header_buffer_size 4k;
      open_file_cache max=102400 inactive=20s;
      open_file_cache_valid 30s;
      open_file_cache_min_uses 1;
      client_header_timeout 15;
      client_body_timeout 15;
      reset_timedout_connection on;
      send_timeout 15;
      server_tokens off;
      client_max_body_size 10m;

      fastcgi_connect_timeout 600;
      fastcgi_send_timeout 600;
      fastcgi_read_timeout 600;
      fastcgi_buffer_size 64k;
      fastcgi_buffers 4 64k;
      fastcgi_busy_buffers_size 128k;
      fastcgi_temp_file_write_size 128k;
      fastcgi_temp_path  /tmp/nginx-cache;
      fastcgi_intercept_errors on;
      fastcgi_cache_path /var/nginx-cache levels=1:2 keys_zone=WORDPRESS:100m inactive=60m;

      gzip on;
      gzip_min_length 2k;
      gzip_buffers 4 32k;
      gzip_http_version 1.1;
      gzip_comp_level 6;
      gzip_types text/plain application/javascript application/json application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/git image/png font/ttf font/xwoff application/css application/font-woff2 application/font-woff;
      gzip_vary on;
      gzip_proxied any;

      include /etc/nginx/conf.d/*.conf;
    }

  data-quality-upload-ui.conf: |
    server {
      listen       8080;
      charset utf-8;
      client_max_body_size 100m;
      access_log   /var/log/nginx/data-quality-upload-ui.log main;
      location ~ .*\.(html|htm|gif|jpg|jpeg|bmp|png|ico|txt|js|css|swf|ttf|woff2|eot|woff|exe|mp3|zip)$ {
          root    /html/data-quality-ui/;
          expires 1d;
      }
      location = / {
          root    /html/data-quality-upload-ui/;
          expires 1d;
      }

      location / {
          proxy_pass  http://pig-gateway:14033;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header Host $host:$server_port;
          proxy_set_header Connection "";

          #支持websocket
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_read_timeout 600s;
      }
    }



### Application Authority Role
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: data-middle-platform
  name: data-quality-upload-ui-reader
rules:
  - apiGroups: [""]
    resources: ["pods","configmaps","services"]
    verbs: ["get", "watch", "list"]
### Application Authority Role  Ref
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: data-quality-upload-ui-reader
  namespace: data-middle-platform
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: data-quality-upload-ui-reader
subjects:
  - kind: ServiceAccount
    name: default
    namespace: data-middle-platform
### Application Read Config Map Default ServiceAccount
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: default
  namespace: data-middle-platform